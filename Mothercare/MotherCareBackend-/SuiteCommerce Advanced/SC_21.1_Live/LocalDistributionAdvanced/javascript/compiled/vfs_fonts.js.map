{"version":3,"sources":["vfs_fonts.js"],"names":[],"mappings":"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","file":"vfs_fonts.js","sourcesContent":["(function (f) {\r\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\r\n    module.exports = f();\r\n  } else if (typeof define === \"function\" && define.amd) {\r\n    define([], f);\r\n  } else {\r\n    var g;\r\n    if (typeof window !== \"undefined\") {\r\n      g = window;\r\n    } else if (typeof global !== \"undefined\") {\r\n      g = global;\r\n    } else if (typeof self !== \"undefined\") {\r\n      g = self;\r\n    } else {\r\n      g = this;\r\n    }\r\n    g.htmlToPdfmake = f();\r\n  }\r\n})(function () {\r\n  var define, module, exports;\r\n  return (function () {\r\n    function r(e, n, t) {\r\n      function o(i, f) {\r\n        if (!n[i]) {\r\n          if (!e[i]) {\r\n            var c = \"function\" == typeof require && require;\r\n            if (!f && c) return c(i, !0);\r\n            if (u) return u(i, !0);\r\n            var a = new Error(\"Cannot find module '\" + i + \"'\");\r\n            throw ((a.code = \"MODULE_NOT_FOUND\"), a);\r\n          }\r\n          var p = (n[i] = { exports: {} });\r\n          e[i][0].call(\r\n            p.exports,\r\n            function (r) {\r\n              var n = e[i][1][r];\r\n              return o(n || r);\r\n            },\r\n            p,\r\n            p.exports,\r\n            r,\r\n            e,\r\n            n,\r\n            t\r\n          );\r\n        }\r\n        return n[i].exports;\r\n      }\r\n      for (\r\n        var u = \"function\" == typeof require && require, i = 0;\r\n        i < t.length;\r\n        i++\r\n      )\r\n        o(t[i]);\r\n      return o;\r\n    }\r\n    return r;\r\n  })()(\r\n    {\r\n      1: [\r\n        function (require, module, exports) {\r\n          function htmlToPdfMake(htmlText, options) {\r\n            \"use strict\";\r\n            this.wndw = options && options.window ? options.window : window;\r\n            this.tableAutoSize =\r\n              options && typeof options.tableAutoSize === \"boolean\"\r\n                ? options.tableAutoSize\r\n                : false;\r\n            this.imagesByReference =\r\n              options && typeof options.imagesByReference === \"boolean\"\r\n                ? options.imagesByReference\r\n                : false;\r\n            this.fontSizes =\r\n              options && Array.isArray(options.fontSizes)\r\n                ? options.fontSizes\r\n                : [10, 14, 16, 18, 20, 24, 28];\r\n            this.defaultStyles = {\r\n              b: { bold: true },\r\n              strong: { bold: true },\r\n              u: { decoration: \"underline\" },\r\n              del: { decoration: \"lineThrough\" },\r\n              s: { decoration: \"lineThrough\" },\r\n              em: { italics: true },\r\n              i: { italics: true },\r\n              h1: { fontSize: 24, bold: true, marginBottom: 5 },\r\n              h2: { fontSize: 22, bold: true, marginBottom: 5 },\r\n              h3: { fontSize: 20, bold: true, marginBottom: 5 },\r\n              h4: { fontSize: 18, bold: true, marginBottom: 5 },\r\n              h5: { fontSize: 16, bold: true, marginBottom: 5 },\r\n              h6: { fontSize: 14, bold: true, marginBottom: 5 },\r\n              a: { color: \"blue\", decoration: \"underline\" },\r\n              strike: { decoration: \"lineThrough\" },\r\n              p: { margin: [0, 5, 0, 10] },\r\n              ul: { marginBottom: 5, marginLeft: 5 },\r\n              table: { marginBottom: 5 },\r\n              th: { bold: true, fillColor: \"#EEEEEE\" },\r\n            };\r\n            this.imagesRef = [];\r\n            this.changeDefaultStyles = function () {\r\n              for (var keyStyle in options.defaultStyles) {\r\n                if (this.defaultStyles.hasOwnProperty(keyStyle)) {\r\n                  if (\r\n                    options.defaultStyles.hasOwnProperty(keyStyle) &&\r\n                    !options.defaultStyles[keyStyle]\r\n                  ) {\r\n                    delete this.defaultStyles[keyStyle];\r\n                  } else {\r\n                    for (var k in options.defaultStyles[keyStyle]) {\r\n                      if (options.defaultStyles[keyStyle][k] === \"\")\r\n                        delete this.defaultStyles[keyStyle][k];\r\n                      else\r\n                        this.defaultStyles[keyStyle][k] =\r\n                          options.defaultStyles[keyStyle][k];\r\n                    }\r\n                  }\r\n                } else {\r\n                  this.defaultStyles[keyStyle] = {};\r\n                  for (var ks in options.defaultStyles[keyStyle]) {\r\n                    this.defaultStyles[keyStyle][ks] =\r\n                      options.defaultStyles[keyStyle][ks];\r\n                  }\r\n                }\r\n              }\r\n            };\r\n            if (options && options.defaultStyles) {\r\n              this.changeDefaultStyles();\r\n            }\r\n            this.convertHtml = function (htmlText) {\r\n              var parser = new this.wndw.DOMParser();\r\n              var parsedHtml = parser.parseFromString(htmlText, \"text/html\");\r\n              var docDef = this.parseElement(parsedHtml.body, []);\r\n              return docDef.stack || docDef.text;\r\n            };\r\n            this.parseElement = function (element, parents) {\r\n              var nodeName = element.nodeName.toUpperCase();\r\n              var nodeNameLowerCase = nodeName.toLowerCase();\r\n              var ret = { text: [] };\r\n              var text,\r\n                needStack = false;\r\n              var dataset,\r\n                i,\r\n                key,\r\n                _this = this;\r\n              if ([\"COLGROUP\", \"COL\"].indexOf(nodeName) > -1) return \"\";\r\n              switch (element.nodeType) {\r\n                case 3: {\r\n                  if (element.textContent) {\r\n                    text = element.textContent;\r\n                    var styleParentTextNode = this.parseStyle(\r\n                      parents[parents.length - 1],\r\n                      true\r\n                    );\r\n                    var hasWhiteSpace = false;\r\n                    for (i = 0; i < styleParentTextNode.length; i++) {\r\n                      if (\r\n                        styleParentTextNode[i].key === \"preserveLeadingSpaces\"\r\n                      ) {\r\n                        hasWhiteSpace = styleParentTextNode[i].value;\r\n                        break;\r\n                      }\r\n                    }\r\n                    if (!hasWhiteSpace)\r\n                      text = element.textContent.replace(/\\n(\\s+)?/g, \"\");\r\n                    if (options && typeof options.replaceText === \"function\")\r\n                      text = options.replaceText(text, parents);\r\n                    if (\r\n                      [\r\n                        \"TABLE\",\r\n                        \"THEAD\",\r\n                        \"TBODY\",\r\n                        \"TFOOT\",\r\n                        \"TR\",\r\n                        \"UL\",\r\n                        \"OL\",\r\n                      ].indexOf(parents[parents.length - 1].nodeName) > -1\r\n                    )\r\n                      text = text.replace(\r\n                        /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\r\n                        \"\"\r\n                      );\r\n                    if (text) {\r\n                      ret = { text: text };\r\n                      ret = this.applyStyle({ ret: ret, parents: parents });\r\n                      return ret;\r\n                    }\r\n                  }\r\n                  return \"\";\r\n                }\r\n                case 1: {\r\n                  ret.nodeName = nodeName;\r\n                  if (element.id) ret.id = element.id;\r\n                  parents.push(element);\r\n                  if (element.childNodes && element.childNodes.length > 0) {\r\n                    [].forEach.call(element.childNodes, function (child) {\r\n                      var res = _this.parseElement(child, parents);\r\n                      if (res) {\r\n                        if (Array.isArray(res.text) && res.text.length === 0)\r\n                          res.text = \"\";\r\n                        ret.text.push(res);\r\n                      }\r\n                    });\r\n                    needStack = this.searchForStack(ret);\r\n                    if (needStack) {\r\n                      ret.stack = ret.text.slice(0);\r\n                      delete ret.text;\r\n                    } else {\r\n                      ret = this.applyStyle({ ret: ret, parents: parents });\r\n                    }\r\n                  }\r\n                  parents.pop();\r\n                  switch (nodeName) {\r\n                    case \"TABLE\": {\r\n                      var rowIndex, cellIndex;\r\n                      ret.table = { body: [] };\r\n                      var tbodies = ret.stack || ret.text;\r\n                      if (Array.isArray(tbodies)) {\r\n                        rowIndex = 0;\r\n                        var allRows = [];\r\n                        tbodies.forEach(function (tbody) {\r\n                          var rows = tbody.stack || tbody.text;\r\n                          if (Array.isArray(rows)) {\r\n                            allRows = allRows.concat(rows);\r\n                            rows.forEach(function (row) {\r\n                              var cells = row.stack || row.text;\r\n                              if (Array.isArray(cells)) {\r\n                                cellIndex = 0;\r\n                                ret.table.body[rowIndex] = [];\r\n                                cells.forEach(function (cell) {\r\n                                  ret.table.body[rowIndex].push(cell);\r\n                                  if (cell.colSpan) {\r\n                                    i = cell.colSpan;\r\n                                    _this.setRowSpan({\r\n                                      rows: allRows,\r\n                                      cell: cell,\r\n                                      rowIndex: rowIndex,\r\n                                      cellIndex: cellIndex,\r\n                                    });\r\n                                    while (--i > 0) {\r\n                                      ret.table.body[rowIndex].push({\r\n                                        text: \"\",\r\n                                      });\r\n                                      _this.setRowSpan({\r\n                                        rows: allRows,\r\n                                        cell: cell,\r\n                                        rowIndex: rowIndex,\r\n                                        cellIndex: cellIndex,\r\n                                      });\r\n                                      cellIndex++;\r\n                                    }\r\n                                  } else {\r\n                                    _this.setRowSpan({\r\n                                      rows: allRows,\r\n                                      cell: cell,\r\n                                      rowIndex: rowIndex,\r\n                                      cellIndex: cellIndex,\r\n                                    });\r\n                                  }\r\n                                  cellIndex++;\r\n                                });\r\n                                rowIndex++;\r\n                              }\r\n                            });\r\n                          }\r\n                        });\r\n                      }\r\n                      delete ret.stack;\r\n                      delete ret.text;\r\n                      ret = this.applyStyle({\r\n                        ret: ret,\r\n                        parents: parents.concat([element]),\r\n                      });\r\n                      if (this.tableAutoSize) {\r\n                        var cellsWidths = [];\r\n                        var cellsHeights = [];\r\n                        var tableWidths = [];\r\n                        var tableHeights = [];\r\n                        ret.table.body.forEach(function (row, rowIndex) {\r\n                          cellsWidths.push([]);\r\n                          cellsHeights.push([]);\r\n                          row.forEach(function (cell) {\r\n                            var width =\r\n                              typeof cell.width !== \"undefined\"\r\n                                ? cell.width\r\n                                : \"auto\";\r\n                            var height =\r\n                              typeof cell.height !== \"undefined\"\r\n                                ? cell.height\r\n                                : \"auto\";\r\n                            if (width !== \"auto\" && cell.colSpan) {\r\n                              if (!isNaN(width)) width /= cell.colSpan;\r\n                              else width = \"auto\";\r\n                            }\r\n                            if (height !== \"auto\" && cell.rowSpan) {\r\n                              if (!isNaN(height)) height /= cell.colSpan;\r\n                              else height = \"auto\";\r\n                            }\r\n                            cellsWidths[rowIndex].push(width);\r\n                            cellsHeights[rowIndex].push(height);\r\n                          });\r\n                        });\r\n                        cellsWidths.forEach(function (row) {\r\n                          row.forEach(function (cellWidth, cellIndex) {\r\n                            var type = typeof tableWidths[cellIndex];\r\n                            if (\r\n                              type === \"undefined\" ||\r\n                              (cellWidth !== \"auto\" &&\r\n                                type === \"number\" &&\r\n                                cellWidth > tableWidths[cellIndex]) ||\r\n                              (cellWidth !== \"auto\" &&\r\n                                tableWidths[cellIndex] === \"auto\")\r\n                            ) {\r\n                              tableWidths[cellIndex] = cellWidth;\r\n                            }\r\n                          });\r\n                        });\r\n                        cellsHeights.forEach(function (row, rowIndex) {\r\n                          row.forEach(function (cellHeight) {\r\n                            var type = typeof tableHeights[rowIndex];\r\n                            if (\r\n                              type === \"undefined\" ||\r\n                              (cellHeight !== \"auto\" &&\r\n                                type === \"number\" &&\r\n                                cellHeight > tableHeights[rowIndex]) ||\r\n                              (cellHeight !== \"auto\" &&\r\n                                tableHeights[rowIndex] === \"auto\")\r\n                            ) {\r\n                              tableHeights[rowIndex] = cellHeight;\r\n                            }\r\n                          });\r\n                        });\r\n                        if (tableWidths.length > 0)\r\n                          ret.table.widths = tableWidths;\r\n                        if (tableHeights.length > 0)\r\n                          ret.table.heights = tableHeights;\r\n                      }\r\n                      if (element.dataset && element.dataset.pdfmake) {\r\n                        dataset = element.dataset.pdfmake;\r\n                        if (dataset.charAt(1) === \"'\")\r\n                          dataset = dataset.replace(/'/g, '\"');\r\n                        try {\r\n                          dataset = JSON.parse(dataset);\r\n                          for (key in dataset) {\r\n                            if (key === \"layout\") {\r\n                              ret.layout = dataset[key];\r\n                            } else {\r\n                              ret.table[key] = dataset[key];\r\n                            }\r\n                          }\r\n                        } catch (e) {\r\n                          console.error(e);\r\n                        }\r\n                      }\r\n                      break;\r\n                    }\r\n                    case \"TH\":\r\n                    case \"TD\": {\r\n                      if (element.getAttribute(\"rowspan\"))\r\n                        ret.rowSpan = element.getAttribute(\"rowspan\") * 1;\r\n                      if (element.getAttribute(\"colspan\"))\r\n                        ret.colSpan = element.getAttribute(\"colspan\") * 1;\r\n                      ret = this.applyStyle({\r\n                        ret: ret,\r\n                        parents: parents.concat([element]),\r\n                      });\r\n                      break;\r\n                    }\r\n                    case \"SVG\": {\r\n                      ret = {\r\n                        svg: element.outerHTML.replace(/\\n(\\s+)?/g, \"\"),\r\n                        nodeName: \"SVG\",\r\n                        style: [\"html-svg\"],\r\n                      };\r\n                      break;\r\n                    }\r\n                    case \"BR\": {\r\n                      ret.text = [{ text: \"\\n\" }];\r\n                      break;\r\n                    }\r\n                    case \"SUB\":\r\n                    case \"SUP\": {\r\n                      ret[nodeName.toLowerCase()] = {\r\n                        offset: \"30%\",\r\n                        fontSize: 8,\r\n                      };\r\n                      break;\r\n                    }\r\n                    case \"HR\": {\r\n                      var styleHR = {\r\n                        width: 514,\r\n                        type: \"line\",\r\n                        margin: [0, 12, 0, 12],\r\n                        thickness: 0.5,\r\n                        color: \"#000000\",\r\n                        left: 0,\r\n                      };\r\n                      if (element.dataset && element.dataset.pdfmake) {\r\n                        dataset = JSON.parse(element.dataset.pdfmake);\r\n                        for (key in dataset) {\r\n                          styleHR[key] = dataset[key];\r\n                        }\r\n                      }\r\n                      ret.margin = styleHR.margin;\r\n                      ret.canvas = [\r\n                        {\r\n                          type: styleHR.type,\r\n                          x1: styleHR.left,\r\n                          y1: 0,\r\n                          x2: styleHR.width,\r\n                          y2: 0,\r\n                          lineWidth: styleHR.thickness,\r\n                          lineColor: styleHR.color,\r\n                        },\r\n                      ];\r\n                      delete ret.text;\r\n                      break;\r\n                    }\r\n                    case \"OL\":\r\n                    case \"UL\": {\r\n                      ret[nodeNameLowerCase] = (ret.stack || ret.text).slice(0);\r\n                      delete ret.stack;\r\n                      delete ret.text;\r\n                      ret = this.applyStyle({\r\n                        ret: ret,\r\n                        parents: parents.concat([element]),\r\n                      });\r\n                      if (element.getAttribute(\"start\")) {\r\n                        ret.start = element.getAttribute(\"start\") * 1;\r\n                      }\r\n                      switch (element.getAttribute(\"type\")) {\r\n                        case \"A\":\r\n                          ret.type = \"upper-alpha\";\r\n                          break;\r\n                        case \"a\":\r\n                          ret.type = \"lower-alpha\";\r\n                          break;\r\n                        case \"I\":\r\n                          ret.type = \"upper-roman\";\r\n                          break;\r\n                        case \"i\":\r\n                          ret.type = \"lower-roman\";\r\n                          break;\r\n                      }\r\n                      if (ret.listStyle || ret.listStyleType)\r\n                        ret.type = ret.listStyle || ret.listStyleType;\r\n                      break;\r\n                    }\r\n                    case \"LI\": {\r\n                      if (ret.stack && !ret.stack[ret.stack.length - 1].text) {\r\n                        text = ret.stack.slice(0, -1);\r\n                        ret = [{ text: text }, ret.stack[ret.stack.length - 1]];\r\n                      }\r\n                      break;\r\n                    }\r\n                    case \"IMG\": {\r\n                      if (this.imagesByReference) {\r\n                        var src = element.getAttribute(\"src\");\r\n                        var index = this.imagesRef.indexOf(src);\r\n                        if (index > -1) ret.image = \"img_ref_\" + index;\r\n                        else {\r\n                          ret.image = \"img_ref_\" + this.imagesRef.length;\r\n                          this.imagesRef.push(src);\r\n                        }\r\n                      } else {\r\n                        ret.image = element.getAttribute(\"src\");\r\n                      }\r\n                      delete ret.stack;\r\n                      delete ret.text;\r\n                      ret = this.applyStyle({\r\n                        ret: ret,\r\n                        parents: parents.concat([element]),\r\n                      });\r\n                      break;\r\n                    }\r\n                    case \"A\": {\r\n                      var setLink = function (pointer, href) {\r\n                        pointer = pointer || { text: \"\" };\r\n                        if (Array.isArray(pointer.text)) {\r\n                          return setLink(pointer.text[0], href);\r\n                        }\r\n                        if (href.indexOf(\"#\") === 0)\r\n                          pointer.linkToDestination = href.slice(1);\r\n                        else pointer.link = href;\r\n                        pointer.nodeName = \"A\";\r\n                        return pointer;\r\n                      };\r\n                      if (element.getAttribute(\"href\")) {\r\n                        ret = setLink(ret, element.getAttribute(\"href\"));\r\n                      }\r\n                      break;\r\n                    }\r\n                    case \"FONT\": {\r\n                      if (element.getAttribute(\"color\")) {\r\n                        ret.color = this.parseColor(\r\n                          element.getAttribute(\"color\")\r\n                        );\r\n                      }\r\n                      if (element.getAttribute(\"size\")) {\r\n                        var size = Math.min(\r\n                          Math.max(1, parseInt(element.getAttribute(\"size\"))),\r\n                          7\r\n                        );\r\n                        var fontSize = Math.max(\r\n                          this.fontSizes[0],\r\n                          this.fontSizes[size - 1]\r\n                        );\r\n                        ret.fontSize = fontSize;\r\n                      }\r\n                      ret = this.applyStyle({\r\n                        ret: ret,\r\n                        parents: parents.concat([element]),\r\n                      });\r\n                      break;\r\n                    }\r\n                    default: {\r\n                      if (options && typeof options.customTag === \"function\") {\r\n                        ret = options.customTag.call(this, {\r\n                          element: element,\r\n                          parents: parents,\r\n                          ret: ret,\r\n                        });\r\n                      }\r\n                    }\r\n                  }\r\n                  if (\r\n                    Array.isArray(ret.text) &&\r\n                    ret.text.length === 1 &&\r\n                    ret.text[0].text &&\r\n                    !ret.text[0].nodeName\r\n                  ) {\r\n                    ret.text = ret.text[0].text;\r\n                  }\r\n                  if (\r\n                    [\"HR\", \"TABLE\"].indexOf(nodeName) === -1 &&\r\n                    element.dataset &&\r\n                    element.dataset.pdfmake\r\n                  ) {\r\n                    dataset = JSON.parse(element.dataset.pdfmake);\r\n                    for (key in dataset) {\r\n                      ret[key] = dataset[key];\r\n                    }\r\n                  }\r\n                  return ret;\r\n                }\r\n              }\r\n            };\r\n            this.searchForStack = function (ret) {\r\n              if (Array.isArray(ret.text)) {\r\n                for (var i = 0; i < ret.text.length; i++) {\r\n                  if (\r\n                    ret.text[i].stack ||\r\n                    [\r\n                      \"P\",\r\n                      \"DIV\",\r\n                      \"TABLE\",\r\n                      \"SVG\",\r\n                      \"UL\",\r\n                      \"OL\",\r\n                      \"IMG\",\r\n                      \"H1\",\r\n                      \"H2\",\r\n                      \"H3\",\r\n                      \"H4\",\r\n                      \"H5\",\r\n                      \"H6\",\r\n                    ].indexOf(ret.text[i].nodeName) > -1\r\n                  )\r\n                    return true;\r\n                  if (this.searchForStack(ret.text[i]) === true) return true;\r\n                }\r\n              }\r\n              return false;\r\n            };\r\n            this.setRowSpan = function (params) {\r\n              var cells;\r\n              if (params.cell.rowSpan) {\r\n                for (var i = 1; i <= params.cell.rowSpan - 1; i++) {\r\n                  cells =\r\n                    params.rows[params.rowIndex + i].text ||\r\n                    params.rows[params.rowIndex + i].stack;\r\n                  cells.splice(params.cellIndex, 0, { text: \"\" });\r\n                }\r\n              }\r\n            };\r\n            this.applyStyle = function (params) {\r\n              var cssClass = [];\r\n              var lastIndex = params.parents.length - 1;\r\n              var _this = this;\r\n              params.parents.forEach(function (parent, parentIndex) {\r\n                var parentNodeName = parent.nodeName.toLowerCase();\r\n                var htmlClass = \"html-\" + parentNodeName;\r\n                if (\r\n                  htmlClass !== \"html-body\" &&\r\n                  cssClass.indexOf(htmlClass) === -1\r\n                )\r\n                  cssClass.unshift(htmlClass);\r\n                var parentClass = (parent.getAttribute(\"class\") || \"\").split(\r\n                  \" \"\r\n                );\r\n                parentClass.forEach(function (p) {\r\n                  if (p) cssClass.push(p);\r\n                });\r\n                var style;\r\n                var ignoreNonDescendentProperties = parentIndex !== lastIndex;\r\n                if (_this.defaultStyles[parentNodeName]) {\r\n                  for (style in _this.defaultStyles[parentNodeName]) {\r\n                    if (\r\n                      _this.defaultStyles[parentNodeName].hasOwnProperty(style)\r\n                    ) {\r\n                      if (\r\n                        !ignoreNonDescendentProperties ||\r\n                        (ignoreNonDescendentProperties &&\r\n                          style.indexOf(\"margin\") === -1 &&\r\n                          style.indexOf(\"border\") === -1)\r\n                      ) {\r\n                        if (style === \"decoration\") {\r\n                          if (!Array.isArray(params.ret[style]))\r\n                            params.ret[style] = [];\r\n                          if (\r\n                            params.ret[style].indexOf(\r\n                              _this.defaultStyles[parentNodeName][style]\r\n                            ) === -1\r\n                          ) {\r\n                            params.ret[style].push(\r\n                              _this.defaultStyles[parentNodeName][style]\r\n                            );\r\n                          }\r\n                        } else {\r\n                          params.ret[style] = JSON.parse(\r\n                            JSON.stringify(\r\n                              _this.defaultStyles[parentNodeName][style]\r\n                            )\r\n                          );\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                if (parentNodeName === \"tr\")\r\n                  ignoreNonDescendentProperties = false;\r\n                style = _this.parseStyle(parent, ignoreNonDescendentProperties);\r\n                style.forEach(function (stl) {\r\n                  if (stl.key === \"decoration\") {\r\n                    if (!Array.isArray(params.ret[stl.key]))\r\n                      params.ret[stl.key] = [];\r\n                    params.ret[stl.key].push(stl.value);\r\n                  } else {\r\n                    if (params.ret.margin && stl.key.indexOf(\"margin\") === 0) {\r\n                      switch (stl.key) {\r\n                        case \"marginLeft\":\r\n                          params.ret.margin[0] = stl.value;\r\n                          break;\r\n                        case \"marginTop\":\r\n                          params.ret.margin[1] = stl.value;\r\n                          break;\r\n                        case \"marginRight\":\r\n                          params.ret.margin[2] = stl.value;\r\n                          break;\r\n                        case \"marginBottom\":\r\n                          params.ret.margin[3] = stl.value;\r\n                          break;\r\n                      }\r\n                    } else {\r\n                      params.ret[stl.key] = stl.value;\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n              params.ret.style = cssClass;\r\n              return params.ret;\r\n            };\r\n            this.parseStyle = function (element, ignoreProperties) {\r\n              var style = element.getAttribute(\"style\") || \"\";\r\n              style = style.split(\";\");\r\n              if (element.getAttribute(\"width\")) {\r\n                style.unshift(\"width:\" + element.getAttribute(\"width\") + \"px\");\r\n              }\r\n              if (element.getAttribute(\"height\")) {\r\n                style.unshift(\r\n                  \"height:\" + element.getAttribute(\"height\") + \"px\"\r\n                );\r\n              }\r\n              var styleDefs = style.map(function (style) {\r\n                return style.toLowerCase().split(\":\");\r\n              });\r\n              var ret = [];\r\n              var borders = [];\r\n              var nodeName = element.nodeName.toUpperCase();\r\n              var _this = this;\r\n              styleDefs.forEach(function (styleDef) {\r\n                if (styleDef.length === 2) {\r\n                  var key = styleDef[0].trim();\r\n                  var value = styleDef[1].trim();\r\n                  switch (key) {\r\n                    case \"margin\": {\r\n                      if (ignoreProperties) break;\r\n                      value = value.split(\" \");\r\n                      if (value.length === 1)\r\n                        value = [value[0], value[0], value[0], value[0]];\r\n                      else if (value.length === 2) value = [value[1], value[0]];\r\n                      else if (value.length === 3)\r\n                        value = [value[1], value[0], value[1], value[2]];\r\n                      else if (value.length === 4)\r\n                        value = [value[3], value[0], value[1], value[2]];\r\n                      value.forEach(function (val, i) {\r\n                        value[i] = _this.convertToUnit(val);\r\n                      });\r\n                      if (value.indexOf(false) === -1)\r\n                        ret.push({ key: key, value: value });\r\n                      break;\r\n                    }\r\n                    case \"text-align\": {\r\n                      ret.push({ key: \"alignment\", value: value });\r\n                      break;\r\n                    }\r\n                    case \"font-weight\": {\r\n                      if (value === \"bold\")\r\n                        ret.push({ key: \"bold\", value: true });\r\n                      break;\r\n                    }\r\n                    case \"text-decoration\": {\r\n                      ret.push({\r\n                        key: \"decoration\",\r\n                        value: _this.toCamelCase(value),\r\n                      });\r\n                      break;\r\n                    }\r\n                    case \"font-style\": {\r\n                      if (value === \"italic\")\r\n                        ret.push({ key: \"italics\", value: true });\r\n                      break;\r\n                    }\r\n                    case \"font-family\": {\r\n                      ret.push({\r\n                        key: \"font\",\r\n                        value: value\r\n                          .split(\",\")[0]\r\n                          .replace(/\"|^'|^\\s*|\\s*$|'$/g, \"\")\r\n                          .replace(/^([a-z])/g, function (g) {\r\n                            return g[0].toUpperCase();\r\n                          })\r\n                          .replace(/ ([a-z])/g, function (g) {\r\n                            return g[1].toUpperCase();\r\n                          }),\r\n                      });\r\n                      break;\r\n                    }\r\n                    case \"color\": {\r\n                      ret.push({\r\n                        key: \"color\",\r\n                        value: _this.parseColor(value),\r\n                      });\r\n                      break;\r\n                    }\r\n                    case \"background-color\": {\r\n                      ret.push({\r\n                        key:\r\n                          nodeName === \"TD\" || nodeName === \"TH\"\r\n                            ? \"fillColor\"\r\n                            : \"background\",\r\n                        value: _this.parseColor(value),\r\n                      });\r\n                      break;\r\n                    }\r\n                    case \"text-indent\": {\r\n                      ret.push({\r\n                        key: \"leadingIndent\",\r\n                        value: _this.convertToUnit(value),\r\n                      });\r\n                      break;\r\n                    }\r\n                    case \"white-space\": {\r\n                      ret.push({\r\n                        key: \"preserveLeadingSpaces\",\r\n                        value:\r\n                          value === \"break-spaces\" ||\r\n                          value.slice(0, 3) === \"pre\",\r\n                      });\r\n                      break;\r\n                    }\r\n                    default: {\r\n                      if (\r\n                        key === \"border\" ||\r\n                        key.indexOf(\"border-left\") === 0 ||\r\n                        key.indexOf(\"border-top\") === 0 ||\r\n                        key.indexOf(\"border-right\") === 0 ||\r\n                        key.indexOf(\"border-bottom\") === 0\r\n                      ) {\r\n                        if (!ignoreProperties)\r\n                          borders.push({ key: key, value: value });\r\n                      } else {\r\n                        if (\r\n                          ignoreProperties &&\r\n                          (key.indexOf(\"margin-\") === 0 ||\r\n                            key === \"width\" ||\r\n                            key === \"height\")\r\n                        )\r\n                          break;\r\n                        if (key.indexOf(\"padding\") === 0) break;\r\n                        if (key.indexOf(\"-\") > -1) key = _this.toCamelCase(key);\r\n                        if (value) {\r\n                          var parsedValue = _this.convertToUnit(value);\r\n                          ret.push({\r\n                            key: key,\r\n                            value: parsedValue === false ? value : parsedValue,\r\n                          });\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n              if (borders.length > 0) {\r\n                var border = [];\r\n                var borderColor = [];\r\n                borders.forEach(function (b) {\r\n                  var properties = b.value.split(\" \");\r\n                  var width = properties[0]\r\n                    .replace(/(\\d+)(\\.\\d+)?([^\\d]+)/g, \"$1$2 \")\r\n                    .trim();\r\n                  var index = -1,\r\n                    i;\r\n                  if (b.key.indexOf(\"-left\") > -1) index = 0;\r\n                  else if (b.key.indexOf(\"-top\") > -1) index = 1;\r\n                  else if (b.key.indexOf(\"-right\") > -1) index = 2;\r\n                  else if (b.key.indexOf(\"-bottom\") > -1) index = 3;\r\n                  if (index > -1) {\r\n                    border[index] = width > 0;\r\n                  } else {\r\n                    for (i = 0; i < 4; i++) border[i] = width > 0;\r\n                  }\r\n                  if (properties.length > 2) {\r\n                    var color = properties.slice(2).join(\" \");\r\n                    if (index > -1) {\r\n                      borderColor[index] = _this.parseColor(color);\r\n                    } else {\r\n                      for (i = 0; i < 4; i++)\r\n                        borderColor[i] = _this.parseColor(color);\r\n                    }\r\n                  }\r\n                });\r\n                for (var i = 0; i < 4; i++) {\r\n                  if (border.length > 0 && typeof border[i] === \"undefined\")\r\n                    border[i] = true;\r\n                  if (\r\n                    borderColor.length > 0 &&\r\n                    typeof borderColor[i] === \"undefined\"\r\n                  )\r\n                    borderColor[i] = \"#000000\";\r\n                }\r\n                if (border.length > 0)\r\n                  ret.push({ key: \"border\", value: border });\r\n                if (borderColor.length > 0)\r\n                  ret.push({ key: \"borderColor\", value: borderColor });\r\n              }\r\n              return ret;\r\n            };\r\n            this.toCamelCase = function (str) {\r\n              return str.replace(/-([a-z])/g, function (g) {\r\n                return g[1].toUpperCase();\r\n              });\r\n            };\r\n            this.parseColor = function (color) {\r\n              var haxRegex = new RegExp(\"^#([0-9a-f]{3}|[0-9a-f]{6})$\");\r\n              var rgbRegex = new RegExp(\r\n                \"^rgb\\\\((\\\\d+),\\\\s*(\\\\d+),\\\\s*(\\\\d+)\\\\)$\"\r\n              );\r\n              var nameRegex = new RegExp(\"^[a-z]+$\");\r\n              if (haxRegex.test(color)) {\r\n                return color;\r\n              } else if (rgbRegex.test(color)) {\r\n                var decimalColors = rgbRegex.exec(color).slice(1);\r\n                for (var i = 0; i < 3; i++) {\r\n                  var decimalValue = +decimalColors[i];\r\n                  if (decimalValue > 255) {\r\n                    decimalValue = 255;\r\n                  }\r\n                  var hexString = \"0\" + decimalValue.toString(16);\r\n                  hexString = hexString.slice(-2);\r\n                  decimalColors[i] = hexString;\r\n                }\r\n                return \"#\" + decimalColors.join(\"\");\r\n              } else if (nameRegex.test(color)) {\r\n                return color === \"transparent\" ? \"white\" : color;\r\n              } else {\r\n                console.error('Could not parse color \"' + color + '\"');\r\n                return color;\r\n              }\r\n            };\r\n            this.convertToUnit = function (val) {\r\n              if (!isNaN(parseFloat(val)) && isFinite(val)) return val * 1;\r\n              var mtch = (val + \"\")\r\n                .trim()\r\n                .match(/^(\\d+(\\.\\d+)?)(pt|px|r?em|cm)$/);\r\n              if (!mtch) return false;\r\n              val = mtch[1];\r\n              switch (mtch[3]) {\r\n                case \"px\": {\r\n                  val = Math.round(val * 0.75292857248934);\r\n                  break;\r\n                }\r\n                case \"em\":\r\n                case \"rem\": {\r\n                  val *= 12;\r\n                  break;\r\n                }\r\n                case \"cm\": {\r\n                  val = Math.round(val * 28.34646);\r\n                  break;\r\n                }\r\n              }\r\n              return val * 1;\r\n            };\r\n            var result = this.convertHtml(htmlText);\r\n            if (typeof result === \"string\") result = { text: result };\r\n            if (this.imagesByReference) {\r\n              result = { content: result, images: {} };\r\n              this.imagesRef.forEach(function (src, i) {\r\n                result.images[\"img_ref_\" + i] = src;\r\n              });\r\n            }\r\n            return result;\r\n          }\r\n          module.exports = function (htmlText, options) {\r\n            return new htmlToPdfMake(htmlText, options);\r\n          };\r\n        },\r\n        {},\r\n      ],\r\n    },\r\n    {},\r\n    [1]\r\n  )(1);\r\n});\r\n"]}